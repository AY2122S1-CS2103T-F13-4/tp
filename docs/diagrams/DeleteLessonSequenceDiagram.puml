@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TuitioneParser" as TuitioneParser LOGIC_COLOR
participant ":DeleteLessonCommandParser" as DeleteLessonCommandParser LOGIC_COLOR
participant "dl:DeleteLessonCommand" as DeleteLessonCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "s:Student" as Student MODEL_COLOR
participant "l1:Lesson" as Lesson MODEL_COLOR
end box

[-> LogicManager : execute("delete-l 1")
activate LogicManager

LogicManager -> TuitioneParser : parseCommand("delete-l 1")
activate TuitioneParser

create DeleteLessonCommandParser
TuitioneParser -> DeleteLessonCommandParser
activate DeleteLessonCommandParser

DeleteLessonCommandParser --> TuitioneParser
deactivate DeleteLessonCommandParser

TuitioneParser -> DeleteLessonCommandParser : parse("1")
activate DeleteLessonCommandParser

create DeleteLessonCommand
DeleteLessonCommandParser -> DeleteLessonCommand
activate DeleteLessonCommand

DeleteLessonCommand --> DeleteLessonCommandParser : dl
deactivate DeleteLessonCommand

DeleteLessonCommandParser --> TuitioneParser : dl
deactivate DeleteLessonCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
DeleteLessonCommandParser -[hidden]-> TuitioneParser
destroy DeleteLessonCommandParser

TuitioneParser --> LogicManager : dl
deactivate TuitioneParser

LogicManager -> DeleteLessonCommand : execute()
activate DeleteLessonCommand

DeleteLessonCommand -> Model : getLesson(1)
activate Model

Model --> DeleteLessonCommand : l1
deactivate Model

DeleteLessonCommand -> Lesson : getStudents()
activate Lesson

Lesson --> DeleteLessonCommand : studentList
deactivate Lesson

loop student s in studentList
    DeleteLessonCommand -> Student : unenrollFromLesson(l1)
    activate Student

    Student -> Lesson : getLessonCode()
    activate Lesson

    Lesson --> Student
    deactivate Lesson
    
    Student --> DeleteLessonCommand
    deactivate Student

    DeleteLessonCommand -> Model : setStudent(s)
    activate Model

    Model --> DeleteLessonCommand
    deactivate Model
end

DeleteLessonCommand -> Lesson : removeAllStudents()
activate Lesson

Lesson --> DeleteLessonCommand
deactivate Lesson

DeleteLessonCommand -> Model : deleteLesson(l1)
activate Model

Model -> Lesson : removeLesson(l1)
destroy Lesson

Model --> DeleteLessonCommand
deactivate Model

create CommandResult
DeleteLessonCommand -> CommandResult
activate CommandResult

CommandResult --> DeleteLessonCommand
deactivate CommandResult

DeleteLessonCommand --> LogicManager : result
deactivate DeleteLessonCommand

[<--LogicManager
deactivate LogicManager
@enduml
