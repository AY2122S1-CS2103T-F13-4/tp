@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":TuitioneParser" as TuitioneParser LOGIC_COLOR
participant ":EnrollCommandParser" as EnrollCommandParser LOGIC_COLOR
participant "el:EnrollLessonCommand" as EnrollLessonCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
participant "l1:Lesson" as LessonL1 MODEL_COLOR
participant "newL1:Lesson" as NewLesson MODEL_COLOR
participant "s1:Student" as StudentS1 MODEL_COLOR


end box

[-> LogicManager : execute("enroll 1 l/1")
activate LogicManager

LogicManager -> TuitioneParser : parseCommand("enroll 1 l/1")
activate TuitioneParser

create EnrollCommandParser
TuitioneParser -> EnrollCommandParser

activate EnrollCommandParser
EnrollCommandParser --> TuitioneParser
deactivate EnrollCommandParser

TuitioneParser -> EnrollCommandParser : parse("1 l/1")
activate EnrollCommandParser

create EnrollLessonCommand
EnrollCommandParser -> EnrollLessonCommand :
activate EnrollLessonCommand

EnrollLessonCommand --> EnrollCommandParser : dl
deactivate EnrollLessonCommand

EnrollCommandParser --> TuitioneParser : dl
deactivate EnrollCommandParser
'Hidden arrow to position the destroy marker below the end of the activation bar.
EnrollCommandParser -[hidden]-> TuitioneParser
destroy EnrollCommandParser

TuitioneParser --> LogicManager  : dl
deactivate TuitioneParser

LogicManager -> EnrollLessonCommand : execute()
activate EnrollLessonCommand

EnrollLessonCommand -> Model : getStudent(1)
activate Model

Model --> EnrollLessonCommand : s1

EnrollLessonCommand -> Model : getLesson(1)
Model --> EnrollLessonCommand : l1


EnrollLessonCommand --> StudentS1 : createClone()
activate "StudentS1"
StudentS1 --> EnrollLessonCommand : newS1
deactivate "StudentS1"

EnrollLessonCommand --> LessonL1 : createClone()
activate "LessonL1"
LessonL1 --> EnrollLessonCommand : newL1
deactivate "LessonL1"

EnrollLessonCommand --> NewLesson :addStudent(newS1)
activate "NewLesson"
NewLesson --> EnrollLessonCommand
deactivate "NewLesson"

EnrollLessonCommand -> Model : setStudent(s1, newS1)
Model --> EnrollLessonCommand

EnrollLessonCommand -> Model : setLesson(l1, newL1)
Model --> EnrollLessonCommand
deactivate Model

create CommandResult
EnrollLessonCommand -> CommandResult
activate CommandResult

CommandResult --> EnrollLessonCommand
deactivate CommandResult

EnrollLessonCommand --> LogicManager : result
deactivate EnrollLessonCommand

[<--LogicManager
deactivate LogicManager
@enduml
